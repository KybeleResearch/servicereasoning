#summary Status of the annotator at 08/04/11 in order to clarify dubious points

= Functionality =
  * Takes as input the ASD of two given services (S,,1,, and S,,2,,). 
  * Produces an annotated version of the first one. 
  * Annotation objects are called `Typing`
  * Its values range between {SUB, SUPER, NONE, EQUIV}  
  * Each annotation states whether the annotated element from S,,1,, is a subtype/supertype for any other element in in S,,2,,

== Assesing the value of *Typing* annotations == 
The typing relationships stated by the Typing objects corresponds to the following pseudo-algorithm:
  * If ∃ (X ϵ S,,1,,, Y ϵ S,,2,,) / (X,,name,, ≡ Y,,name,,) ∧ (X,,isTypeOf,, ≡ Y,,isTypeOf,,) then
    * If X < Y then (if _X is subtype of Y_)
      * If Y < X ⇒ *EQUIV* (_X and Y are Equivalent_)
      * If Y ≮ X ⇒ *SUB* (_X is subtype of Y_)
    * If X > Y then (if _X is supertype of Y_)
      * If Y < X ⇒ *EQUIV* (_X and Y are Equivalent_)
      * If Y ≯ X ⇒ *SUPER* (_X is supertype of Y_)
  * If ∄​ (X ϵ S,,1,,, Y ϵ S,,2,,) / (X.name ≡ Y.name) ∧ (X.isTypeOf ≡ Y.isTypeOf) ⇒ *NONE*(_there is no matching element for X)

== Definition of sub/supertyping relationships ==
In the following we summarize how to check whether there is a sub/supertype relationship between two given objects depending in the nature of the objects 

=== Operations ===
For a given operation X being subtype of another operation Y the following conditions must be fullfilled:
  * X,,name,, = Y,,name,,
  * X,,messagePattern,, ≤ Y,,messagePattern,,
    * Notice that (`one-way` ≤ `request-response`) ∧ (`notification` ≤ `solicit-response`)
  * Y,,|messages|,, ≤ X,,|messages|,,

=== Messages ===
For a given message X being *subtype* of another message Y the following conditions must be fullfilled:
  * X,,name,, ≡ Y,,name,,
  * X,,role,, ≡ Y,,role,,
  * X,,subset,, ≡ Y,,subset,,
  * Y,,|infoTypes|,, ≤ X,,|infoTypes|,,

For a given message X being *supertype* of another message Y, the following conditions must be fullfilled:
  * X,,name,, ≡ Y,,name,,
  * X,,role,, ≡ Y,,role,,
  * X,,subset,, ≡ Y,,subset,,
  * Y,,|infoTypes|,, ≤ X,,|infoTypes|,,

=== InfoType and InfoTypeImported ===
For a given InfoType X being *subtype* of another infoType Y the following conditions must be fullfilled:
  * X,,name,, ≡ Y,,name,,
  * X,,valueType,, ≤ Y,,valueType,,
    * Note that `date ≤ int ≤ float ≤ double ≤ string ≤ document`
  * X,,subset,, ≡ Y,,subset,,
  * Y,,|infoType|,, ≤ X,,|infoType|,,
  * Y,,|ref_infoType|,, ≤ X,,|ref_infoType|,,
<font color=red>
*TO DISCUSS*
  * Do we need to consider the `valueRange` attribute in some way???
</font>

=== Assertion ===
For a given Assertion X being *subtype* of another Assertion Y the following conditions must be fullfilled:
  * X,,name,, ≡ Y,,name,,
  * X,,dimension,, ≡ Y,,dimension,,
  * X,,dimensionType,, ≡ Y,,dimensionType,,
  * X,,intention,, ≡ Y,,intention,,
  * If `dimension = monotonic`
    * X,,minVal,, ≤ Y,,minVal,,
    * X,,maxVal,, ≤ Y,,maxVal,,
  * If `dimension = antitonic`
    * X,,minVal,, ≥ Y,,minVal,,
    * X,,maxVal,, ≥ Y,,maxVal,,
<font color=red>
*TO DISCUSS*
  * Do we need to consider the `lType` and `subset` attributes in some way???
</font>

=== AssertionSet ===
When comparing the AssertionSet X with the AssertionSet Y the following values will be obtaied in presence of the following conditions:

  * X,,Typing = *SUB* ⇔
    * X,,name,, ≡ Y,,name,,
    * Y,,|assertion|,, ≤ X,,|assertion|,,
    * a,,Typing,, = SUB ∀ a ∈ X,,{assertion},, 

  * X,,Typing = *SUPER* ⇔
    * X,,name,, ≡ Y,,name,,
    * X,,|assertion|,, ≤ Y,,|assertion|,,
    * a,,Typing,, = SUPER ∀ a ∈ X,,{assertion},, 

  * X,,Typing = *NONE* ⇔
    * X,,name,, ≡ Y,,name,,
    * X,,|assertion|,, ≤ Y,,|assertion|,,
    * ∃ a ∈ X,,{assertion},, / a,,Typing,, = NONE 

  * X,,Typing = *EQUIV* ⇔
    * X,,name,, ≡ Y,,name,,
    * Rest of scenarios

<font color=red>
*TO DISCUSS*
  * Do we need to consider the `lType` attribute in some way???
  * (With Jenifer) The EQUIV computation seems to be a little bit strange ...
</font>

=== Profiles ===
When comparing the Profile X with the Profile Y the following values will be obtained in presence of the following conditions:
  * X,,Typing = *SUB* ⇔
    * X,,name,, ≡ Y,,name,,
    * Y,,|assertionSet|,, ≤ X,,|assertionSet|,,
    * as,,Typing,, = SUB ∀ as ∈ X,,{assertionSet},, 
  * X,,Typing = *SUPER* ⇔
    * X,,name,, ≡ Y,,name,,
    * Y,,|assertionSet|,, ≥ X,,|assertionSet|,,
    * as,,Typing,, = SUPER ∀ as ∈ X,,{assertionSet},, 
  * X,,Typing = *NONE* ⇔
    * ∃ as ∈ X,,{assertionSet},, / a,,Typing,, = NONE 