/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package WSDL1_1.provider;

import WSDL1_1.util.WSDL1_1AdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class WSDL1_1ItemProviderAdapterFactory extends WSDL1_1AdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WSDL1_1ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Schema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaItemProvider schemaItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Schema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaAdapter() {
		if (schemaItemProvider == null) {
			schemaItemProvider = new SchemaItemProvider(this);
		}

		return schemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.AdicionalInformationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdicionalInformationTypeItemProvider adicionalInformationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.AdicionalInformationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdicionalInformationTypeAdapter() {
		if (adicionalInformationTypeItemProvider == null) {
			adicionalInformationTypeItemProvider = new AdicionalInformationTypeItemProvider(this);
		}

		return adicionalInformationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.TypeRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeRefItemProvider typeRefItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.TypeRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeRefAdapter() {
		if (typeRefItemProvider == null) {
			typeRefItemProvider = new TypeRefItemProvider(this);
		}

		return typeRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Include} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IncludeItemProvider includeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Include}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIncludeAdapter() {
		if (includeItemProvider == null) {
			includeItemProvider = new IncludeItemProvider(this);
		}

		return includeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.ImportXMLSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportXMLSchemaItemProvider importXMLSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.ImportXMLSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportXMLSchemaAdapter() {
		if (importXMLSchemaItemProvider == null) {
			importXMLSchemaItemProvider = new ImportXMLSchemaItemProvider(this);
		}

		return importXMLSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Redefine} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RedefineItemProvider redefineItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Redefine}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRedefineAdapter() {
		if (redefineItemProvider == null) {
			redefineItemProvider = new RedefineItemProvider(this);
		}

		return redefineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Annotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Annotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.ComplexType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComplexTypeItemProvider complexTypeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.ComplexType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComplexTypeAdapter() {
		if (complexTypeItemProvider == null) {
			complexTypeItemProvider = new ComplexTypeItemProvider(this);
		}

		return complexTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Element} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementItemProvider elementItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Element}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementAdapter() {
		if (elementItemProvider == null) {
			elementItemProvider = new ElementItemProvider(this);
		}

		return elementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.ElementImported} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementImportedItemProvider elementImportedItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.ElementImported}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementImportedAdapter() {
		if (elementImportedItemProvider == null) {
			elementImportedItemProvider = new ElementImportedItemProvider(this);
		}

		return elementImportedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.AttributeGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeGroupItemProvider attributeGroupItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.AttributeGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeGroupAdapter() {
		if (attributeGroupItemProvider == null) {
			attributeGroupItemProvider = new AttributeGroupItemProvider(this);
		}

		return attributeGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Group} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupItemProvider groupItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Group}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupAdapter() {
		if (groupItemProvider == null) {
			groupItemProvider = new GroupItemProvider(this);
		}

		return groupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Notation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotationItemProvider notationItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Notation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotationAdapter() {
		if (notationItemProvider == null) {
			notationItemProvider = new NotationItemProvider(this);
		}

		return notationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.SimpleContent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleContentItemProvider simpleContentItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.SimpleContent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleContentAdapter() {
		if (simpleContentItemProvider == null) {
			simpleContentItemProvider = new SimpleContentItemProvider(this);
		}

		return simpleContentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.ComplexContent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComplexContentItemProvider complexContentItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.ComplexContent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComplexContentAdapter() {
		if (complexContentItemProvider == null) {
			complexContentItemProvider = new ComplexContentItemProvider(this);
		}

		return complexContentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Unique} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniqueItemProvider uniqueItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Unique}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniqueAdapter() {
		if (uniqueItemProvider == null) {
			uniqueItemProvider = new UniqueItemProvider(this);
		}

		return uniqueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Key} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyItemProvider keyItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Key}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyAdapter() {
		if (keyItemProvider == null) {
			keyItemProvider = new KeyItemProvider(this);
		}

		return keyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.KeyRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyRefItemProvider keyRefItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.KeyRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyRefAdapter() {
		if (keyRefItemProvider == null) {
			keyRefItemProvider = new KeyRefItemProvider(this);
		}

		return keyRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.AnyAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnyAttributeItemProvider anyAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.AnyAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnyAttributeAdapter() {
		if (anyAttributeItemProvider == null) {
			anyAttributeItemProvider = new AnyAttributeItemProvider(this);
		}

		return anyAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Extension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionItemProvider extensionItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Extension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionAdapter() {
		if (extensionItemProvider == null) {
			extensionItemProvider = new ExtensionItemProvider(this);
		}

		return extensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Selector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectorItemProvider selectorItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Selector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectorAdapter() {
		if (selectorItemProvider == null) {
			selectorItemProvider = new SelectorItemProvider(this);
		}

		return selectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Field} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FieldItemProvider fieldItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Field}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFieldAdapter() {
		if (fieldItemProvider == null) {
			fieldItemProvider = new FieldItemProvider(this);
		}

		return fieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.AppInfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AppInfoItemProvider appInfoItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.AppInfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAppInfoAdapter() {
		if (appInfoItemProvider == null) {
			appInfoItemProvider = new AppInfoItemProvider(this);
		}

		return appInfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.DocumentationXMLSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentationXMLSchemaItemProvider documentationXMLSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.DocumentationXMLSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentationXMLSchemaAdapter() {
		if (documentationXMLSchemaItemProvider == null) {
			documentationXMLSchemaItemProvider = new DocumentationXMLSchemaItemProvider(this);
		}

		return documentationXMLSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Any} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnyItemProvider anyItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Any}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnyAdapter() {
		if (anyItemProvider == null) {
			anyItemProvider = new AnyItemProvider(this);
		}

		return anyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.All} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AllItemProvider allItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.All}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAllAdapter() {
		if (allItemProvider == null) {
			allItemProvider = new AllItemProvider(this);
		}

		return allItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Choice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoiceItemProvider choiceItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Choice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChoiceAdapter() {
		if (choiceItemProvider == null) {
			choiceItemProvider = new ChoiceItemProvider(this);
		}

		return choiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.SequenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceTypeItemProvider sequenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.SequenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceTypeAdapter() {
		if (sequenceTypeItemProvider == null) {
			sequenceTypeItemProvider = new SequenceTypeItemProvider(this);
		}

		return sequenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.SimpleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleTypeItemProvider simpleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.SimpleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleTypeAdapter() {
		if (simpleTypeItemProvider == null) {
			simpleTypeItemProvider = new SimpleTypeItemProvider(this);
		}

		return simpleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.List} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListItemProvider listItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.List}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListAdapter() {
		if (listItemProvider == null) {
			listItemProvider = new ListItemProvider(this);
		}

		return listItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Union} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnionItemProvider unionItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Union}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnionAdapter() {
		if (unionItemProvider == null) {
			unionItemProvider = new UnionItemProvider(this);
		}

		return unionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Restriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RestrictionItemProvider restrictionItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Restriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRestrictionAdapter() {
		if (restrictionItemProvider == null) {
			restrictionItemProvider = new RestrictionItemProvider(this);
		}

		return restrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MinInclusive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinInclusiveItemProvider minInclusiveItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MinInclusive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinInclusiveAdapter() {
		if (minInclusiveItemProvider == null) {
			minInclusiveItemProvider = new MinInclusiveItemProvider(this);
		}

		return minInclusiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MinExclusive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinExclusiveItemProvider minExclusiveItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MinExclusive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinExclusiveAdapter() {
		if (minExclusiveItemProvider == null) {
			minExclusiveItemProvider = new MinExclusiveItemProvider(this);
		}

		return minExclusiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MaxInclusive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxInclusiveItemProvider maxInclusiveItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MaxInclusive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxInclusiveAdapter() {
		if (maxInclusiveItemProvider == null) {
			maxInclusiveItemProvider = new MaxInclusiveItemProvider(this);
		}

		return maxInclusiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MaxExclusive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxExclusiveItemProvider maxExclusiveItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MaxExclusive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxExclusiveAdapter() {
		if (maxExclusiveItemProvider == null) {
			maxExclusiveItemProvider = new MaxExclusiveItemProvider(this);
		}

		return maxExclusiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.TotalDigits} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TotalDigitsItemProvider totalDigitsItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.TotalDigits}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTotalDigitsAdapter() {
		if (totalDigitsItemProvider == null) {
			totalDigitsItemProvider = new TotalDigitsItemProvider(this);
		}

		return totalDigitsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.FractionDigits} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FractionDigitsItemProvider fractionDigitsItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.FractionDigits}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFractionDigitsAdapter() {
		if (fractionDigitsItemProvider == null) {
			fractionDigitsItemProvider = new FractionDigitsItemProvider(this);
		}

		return fractionDigitsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Pattern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PatternItemProvider patternItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Pattern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPatternAdapter() {
		if (patternItemProvider == null) {
			patternItemProvider = new PatternItemProvider(this);
		}

		return patternItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Enumeration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationItemProvider enumerationItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Enumeration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationAdapter() {
		if (enumerationItemProvider == null) {
			enumerationItemProvider = new EnumerationItemProvider(this);
		}

		return enumerationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.WhiteSpace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhiteSpaceItemProvider whiteSpaceItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.WhiteSpace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWhiteSpaceAdapter() {
		if (whiteSpaceItemProvider == null) {
			whiteSpaceItemProvider = new WhiteSpaceItemProvider(this);
		}

		return whiteSpaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Length} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthItemProvider lengthItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Length}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthAdapter() {
		if (lengthItemProvider == null) {
			lengthItemProvider = new LengthItemProvider(this);
		}

		return lengthItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MaxLength} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxLengthItemProvider maxLengthItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MaxLength}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxLengthAdapter() {
		if (maxLengthItemProvider == null) {
			maxLengthItemProvider = new MaxLengthItemProvider(this);
		}

		return maxLengthItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MinLength} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinLengthItemProvider minLengthItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MinLength}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinLengthAdapter() {
		if (minLengthItemProvider == null) {
			minLengthItemProvider = new MinLengthItemProvider(this);
		}

		return minLengthItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Object} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectItemProvider objectItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Object}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectAdapter() {
		if (objectItemProvider == null) {
			objectItemProvider = new ObjectItemProvider(this);
		}

		return objectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.BindingSOAP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingSOAPItemProvider bindingSOAPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.BindingSOAP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingSOAPAdapter() {
		if (bindingSOAPItemProvider == null) {
			bindingSOAPItemProvider = new BindingSOAPItemProvider(this);
		}

		return bindingSOAPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.OperationSOAP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationSOAPItemProvider operationSOAPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.OperationSOAP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationSOAPAdapter() {
		if (operationSOAPItemProvider == null) {
			operationSOAPItemProvider = new OperationSOAPItemProvider(this);
		}

		return operationSOAPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.BodySOAP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BodySOAPItemProvider bodySOAPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.BodySOAP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBodySOAPAdapter() {
		if (bodySOAPItemProvider == null) {
			bodySOAPItemProvider = new BodySOAPItemProvider(this);
		}

		return bodySOAPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.HeaderSOAP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HeaderSOAPItemProvider headerSOAPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.HeaderSOAP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHeaderSOAPAdapter() {
		if (headerSOAPItemProvider == null) {
			headerSOAPItemProvider = new HeaderSOAPItemProvider(this);
		}

		return headerSOAPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.HeaderFaultSOAP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HeaderFaultSOAPItemProvider headerFaultSOAPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.HeaderFaultSOAP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHeaderFaultSOAPAdapter() {
		if (headerFaultSOAPItemProvider == null) {
			headerFaultSOAPItemProvider = new HeaderFaultSOAPItemProvider(this);
		}

		return headerFaultSOAPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.AddressSOAP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressSOAPItemProvider addressSOAPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.AddressSOAP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressSOAPAdapter() {
		if (addressSOAPItemProvider == null) {
			addressSOAPItemProvider = new AddressSOAPItemProvider(this);
		}

		return addressSOAPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.FaultSOAP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FaultSOAPItemProvider faultSOAPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.FaultSOAP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFaultSOAPAdapter() {
		if (faultSOAPItemProvider == null) {
			faultSOAPItemProvider = new FaultSOAPItemProvider(this);
		}

		return faultSOAPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.AddressHTTP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressHTTPItemProvider addressHTTPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.AddressHTTP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressHTTPAdapter() {
		if (addressHTTPItemProvider == null) {
			addressHTTPItemProvider = new AddressHTTPItemProvider(this);
		}

		return addressHTTPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.OperationHTTP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationHTTPItemProvider operationHTTPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.OperationHTTP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationHTTPAdapter() {
		if (operationHTTPItemProvider == null) {
			operationHTTPItemProvider = new OperationHTTPItemProvider(this);
		}

		return operationHTTPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.URLEncoded} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected URLEncodedItemProvider urlEncodedItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.URLEncoded}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createURLEncodedAdapter() {
		if (urlEncodedItemProvider == null) {
			urlEncodedItemProvider = new URLEncodedItemProvider(this);
		}

		return urlEncodedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.URLReplacement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected URLReplacementItemProvider urlReplacementItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.URLReplacement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createURLReplacementAdapter() {
		if (urlReplacementItemProvider == null) {
			urlReplacementItemProvider = new URLReplacementItemProvider(this);
		}

		return urlReplacementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.BindingHTTP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingHTTPItemProvider bindingHTTPItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.BindingHTTP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingHTTPAdapter() {
		if (bindingHTTPItemProvider == null) {
			bindingHTTPItemProvider = new BindingHTTPItemProvider(this);
		}

		return bindingHTTPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MIMEMultiPartRelated} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MIMEMultiPartRelatedItemProvider mimeMultiPartRelatedItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MIMEMultiPartRelated}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMIMEMultiPartRelatedAdapter() {
		if (mimeMultiPartRelatedItemProvider == null) {
			mimeMultiPartRelatedItemProvider = new MIMEMultiPartRelatedItemProvider(this);
		}

		return mimeMultiPartRelatedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MIMEPart} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MIMEPartItemProvider mimePartItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MIMEPart}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMIMEPartAdapter() {
		if (mimePartItemProvider == null) {
			mimePartItemProvider = new MIMEPartItemProvider(this);
		}

		return mimePartItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MIMEContent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MIMEContentItemProvider mimeContentItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MIMEContent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMIMEContentAdapter() {
		if (mimeContentItemProvider == null) {
			mimeContentItemProvider = new MIMEContentItemProvider(this);
		}

		return mimeContentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.MIMEXml} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MIMEXmlItemProvider mimeXmlItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.MIMEXml}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMIMEXmlAdapter() {
		if (mimeXmlItemProvider == null) {
			mimeXmlItemProvider = new MIMEXmlItemProvider(this);
		}

		return mimeXmlItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.PortTypeFault} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortTypeFaultItemProvider portTypeFaultItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.PortTypeFault}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortTypeFaultAdapter() {
		if (portTypeFaultItemProvider == null) {
			portTypeFaultItemProvider = new PortTypeFaultItemProvider(this);
		}

		return portTypeFaultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Definitions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionsItemProvider definitionsItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Definitions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionsAdapter() {
		if (definitionsItemProvider == null) {
			definitionsItemProvider = new DefinitionsItemProvider(this);
		}

		return definitionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.ElementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementTypeItemProvider elementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.ElementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementTypeAdapter() {
		if (elementTypeItemProvider == null) {
			elementTypeItemProvider = new ElementTypeItemProvider(this);
		}

		return elementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Message} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageItemProvider messageItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Message}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageAdapter() {
		if (messageItemProvider == null) {
			messageItemProvider = new MessageItemProvider(this);
		}

		return messageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Part} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartItemProvider partItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Part}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartAdapter() {
		if (partItemProvider == null) {
			partItemProvider = new PartItemProvider(this);
		}

		return partItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.PortType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortTypeItemProvider portTypeItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.PortType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortTypeAdapter() {
		if (portTypeItemProvider == null) {
			portTypeItemProvider = new PortTypeItemProvider(this);
		}

		return portTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.PortTypeOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortTypeOperationItemProvider portTypeOperationItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.PortTypeOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortTypeOperationAdapter() {
		if (portTypeOperationItemProvider == null) {
			portTypeOperationItemProvider = new PortTypeOperationItemProvider(this);
		}

		return portTypeOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.PortTypeInput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortTypeInputItemProvider portTypeInputItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.PortTypeInput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortTypeInputAdapter() {
		if (portTypeInputItemProvider == null) {
			portTypeInputItemProvider = new PortTypeInputItemProvider(this);
		}

		return portTypeInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.PortTypeOutput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortTypeOutputItemProvider portTypeOutputItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.PortTypeOutput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortTypeOutputAdapter() {
		if (portTypeOutputItemProvider == null) {
			portTypeOutputItemProvider = new PortTypeOutputItemProvider(this);
		}

		return portTypeOutputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Binding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingItemProvider bindingItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Binding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingAdapter() {
		if (bindingItemProvider == null) {
			bindingItemProvider = new BindingItemProvider(this);
		}

		return bindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.BindingOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingOperationItemProvider bindingOperationItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.BindingOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingOperationAdapter() {
		if (bindingOperationItemProvider == null) {
			bindingOperationItemProvider = new BindingOperationItemProvider(this);
		}

		return bindingOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.BindingInput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingInputItemProvider bindingInputItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.BindingInput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingInputAdapter() {
		if (bindingInputItemProvider == null) {
			bindingInputItemProvider = new BindingInputItemProvider(this);
		}

		return bindingInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.BindingOutput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingOutputItemProvider bindingOutputItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.BindingOutput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingOutputAdapter() {
		if (bindingOutputItemProvider == null) {
			bindingOutputItemProvider = new BindingOutputItemProvider(this);
		}

		return bindingOutputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.BindingFault} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingFaultItemProvider bindingFaultItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.BindingFault}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingFaultAdapter() {
		if (bindingFaultItemProvider == null) {
			bindingFaultItemProvider = new BindingFaultItemProvider(this);
		}

		return bindingFaultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Service} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceItemProvider serviceItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Service}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceAdapter() {
		if (serviceItemProvider == null) {
			serviceItemProvider = new ServiceItemProvider(this);
		}

		return serviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Port} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortItemProvider portItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Port}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortAdapter() {
		if (portItemProvider == null) {
			portItemProvider = new PortItemProvider(this);
		}

		return portItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Documentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentationItemProvider documentationItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Documentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentationAdapter() {
		if (documentationItemProvider == null) {
			documentationItemProvider = new DocumentationItemProvider(this);
		}

		return documentationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Text} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextItemProvider textItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Text}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextAdapter() {
		if (textItemProvider == null) {
			textItemProvider = new TextItemProvider(this);
		}

		return textItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link WSDL1_1.Namespace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamespaceItemProvider namespaceItemProvider;

	/**
	 * This creates an adapter for a {@link WSDL1_1.Namespace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamespaceAdapter() {
		if (namespaceItemProvider == null) {
			namespaceItemProvider = new NamespaceItemProvider(this);
		}

		return namespaceItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (schemaItemProvider != null) schemaItemProvider.dispose();
		if (adicionalInformationTypeItemProvider != null) adicionalInformationTypeItemProvider.dispose();
		if (typeRefItemProvider != null) typeRefItemProvider.dispose();
		if (includeItemProvider != null) includeItemProvider.dispose();
		if (importXMLSchemaItemProvider != null) importXMLSchemaItemProvider.dispose();
		if (redefineItemProvider != null) redefineItemProvider.dispose();
		if (annotationItemProvider != null) annotationItemProvider.dispose();
		if (complexTypeItemProvider != null) complexTypeItemProvider.dispose();
		if (elementItemProvider != null) elementItemProvider.dispose();
		if (elementImportedItemProvider != null) elementImportedItemProvider.dispose();
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (attributeGroupItemProvider != null) attributeGroupItemProvider.dispose();
		if (groupItemProvider != null) groupItemProvider.dispose();
		if (notationItemProvider != null) notationItemProvider.dispose();
		if (simpleContentItemProvider != null) simpleContentItemProvider.dispose();
		if (complexContentItemProvider != null) complexContentItemProvider.dispose();
		if (uniqueItemProvider != null) uniqueItemProvider.dispose();
		if (keyItemProvider != null) keyItemProvider.dispose();
		if (keyRefItemProvider != null) keyRefItemProvider.dispose();
		if (anyAttributeItemProvider != null) anyAttributeItemProvider.dispose();
		if (extensionItemProvider != null) extensionItemProvider.dispose();
		if (selectorItemProvider != null) selectorItemProvider.dispose();
		if (fieldItemProvider != null) fieldItemProvider.dispose();
		if (appInfoItemProvider != null) appInfoItemProvider.dispose();
		if (documentationXMLSchemaItemProvider != null) documentationXMLSchemaItemProvider.dispose();
		if (anyItemProvider != null) anyItemProvider.dispose();
		if (allItemProvider != null) allItemProvider.dispose();
		if (choiceItemProvider != null) choiceItemProvider.dispose();
		if (sequenceTypeItemProvider != null) sequenceTypeItemProvider.dispose();
		if (simpleTypeItemProvider != null) simpleTypeItemProvider.dispose();
		if (listItemProvider != null) listItemProvider.dispose();
		if (unionItemProvider != null) unionItemProvider.dispose();
		if (restrictionItemProvider != null) restrictionItemProvider.dispose();
		if (minInclusiveItemProvider != null) minInclusiveItemProvider.dispose();
		if (minExclusiveItemProvider != null) minExclusiveItemProvider.dispose();
		if (maxInclusiveItemProvider != null) maxInclusiveItemProvider.dispose();
		if (maxExclusiveItemProvider != null) maxExclusiveItemProvider.dispose();
		if (totalDigitsItemProvider != null) totalDigitsItemProvider.dispose();
		if (fractionDigitsItemProvider != null) fractionDigitsItemProvider.dispose();
		if (patternItemProvider != null) patternItemProvider.dispose();
		if (enumerationItemProvider != null) enumerationItemProvider.dispose();
		if (whiteSpaceItemProvider != null) whiteSpaceItemProvider.dispose();
		if (lengthItemProvider != null) lengthItemProvider.dispose();
		if (maxLengthItemProvider != null) maxLengthItemProvider.dispose();
		if (minLengthItemProvider != null) minLengthItemProvider.dispose();
		if (objectItemProvider != null) objectItemProvider.dispose();
		if (bindingSOAPItemProvider != null) bindingSOAPItemProvider.dispose();
		if (operationSOAPItemProvider != null) operationSOAPItemProvider.dispose();
		if (bodySOAPItemProvider != null) bodySOAPItemProvider.dispose();
		if (headerSOAPItemProvider != null) headerSOAPItemProvider.dispose();
		if (headerFaultSOAPItemProvider != null) headerFaultSOAPItemProvider.dispose();
		if (addressSOAPItemProvider != null) addressSOAPItemProvider.dispose();
		if (faultSOAPItemProvider != null) faultSOAPItemProvider.dispose();
		if (addressHTTPItemProvider != null) addressHTTPItemProvider.dispose();
		if (operationHTTPItemProvider != null) operationHTTPItemProvider.dispose();
		if (urlEncodedItemProvider != null) urlEncodedItemProvider.dispose();
		if (urlReplacementItemProvider != null) urlReplacementItemProvider.dispose();
		if (bindingHTTPItemProvider != null) bindingHTTPItemProvider.dispose();
		if (mimeMultiPartRelatedItemProvider != null) mimeMultiPartRelatedItemProvider.dispose();
		if (mimePartItemProvider != null) mimePartItemProvider.dispose();
		if (mimeContentItemProvider != null) mimeContentItemProvider.dispose();
		if (mimeXmlItemProvider != null) mimeXmlItemProvider.dispose();
		if (portTypeFaultItemProvider != null) portTypeFaultItemProvider.dispose();
		if (definitionsItemProvider != null) definitionsItemProvider.dispose();
		if (elementTypeItemProvider != null) elementTypeItemProvider.dispose();
		if (messageItemProvider != null) messageItemProvider.dispose();
		if (partItemProvider != null) partItemProvider.dispose();
		if (portTypeItemProvider != null) portTypeItemProvider.dispose();
		if (portTypeOperationItemProvider != null) portTypeOperationItemProvider.dispose();
		if (portTypeInputItemProvider != null) portTypeInputItemProvider.dispose();
		if (portTypeOutputItemProvider != null) portTypeOutputItemProvider.dispose();
		if (bindingItemProvider != null) bindingItemProvider.dispose();
		if (bindingOperationItemProvider != null) bindingOperationItemProvider.dispose();
		if (bindingInputItemProvider != null) bindingInputItemProvider.dispose();
		if (bindingOutputItemProvider != null) bindingOutputItemProvider.dispose();
		if (bindingFaultItemProvider != null) bindingFaultItemProvider.dispose();
		if (serviceItemProvider != null) serviceItemProvider.dispose();
		if (portItemProvider != null) portItemProvider.dispose();
		if (importItemProvider != null) importItemProvider.dispose();
		if (documentationItemProvider != null) documentationItemProvider.dispose();
		if (textItemProvider != null) textItemProvider.dispose();
		if (namespaceItemProvider != null) namespaceItemProvider.dispose();
	}

}
